
imu_spi_com.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000002c8  0000035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000035c  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000035c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000370  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000017c  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000028  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000b6  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  88:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <SPI_MasterInit>:
  90:	8c e2       	ldi	r24, 0x2C	; 44
  92:	84 b9       	out	0x04, r24	; 4
  94:	81 e5       	ldi	r24, 0x51	; 81
  96:	8c bd       	out	0x2c, r24	; 44
  98:	08 95       	ret

0000009a <SPI_MasterTransmit>:
  9a:	8e bd       	out	0x2e, r24	; 46
  9c:	0d b4       	in	r0, 0x2d	; 45
  9e:	07 fe       	sbrs	r0, 7
  a0:	fd cf       	rjmp	.-6      	; 0x9c <SPI_MasterTransmit+0x2>
  a2:	08 95       	ret

000000a4 <IMU_read_acc>:
  a4:	2a 9a       	sbi	0x05, 2	; 5
  a6:	28 ea       	ldi	r18, 0xA8	; 168
  a8:	2e bd       	out	0x2e, r18	; 46
  aa:	0d b4       	in	r0, 0x2d	; 45
  ac:	07 fe       	sbrs	r0, 7
  ae:	fd cf       	rjmp	.-6      	; 0xaa <IMU_read_acc+0x6>
  b0:	9c 01       	movw	r18, r24
  b2:	29 5f       	subi	r18, 0xF9	; 249
  b4:	3f 4f       	sbci	r19, 0xFF	; 255
  b6:	4e b5       	in	r20, 0x2e	; 46
  b8:	fc 01       	movw	r30, r24
  ba:	41 93       	st	Z+, r20
  bc:	cf 01       	movw	r24, r30
  be:	e2 17       	cp	r30, r18
  c0:	f3 07       	cpc	r31, r19
  c2:	c9 f7       	brne	.-14     	; 0xb6 <IMU_read_acc+0x12>
  c4:	2a 98       	cbi	0x05, 2	; 5
  c6:	08 95       	ret

000000c8 <main>:
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <main+0x6>
  ce:	00 d0       	rcall	.+0      	; 0xd0 <main+0x8>
  d0:	00 d0       	rcall	.+0      	; 0xd2 <main+0xa>
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	78 94       	sei
  d8:	87 e6       	ldi	r24, 0x67	; 103
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 85 00 	call	0x10a	; 0x10a <USART_init>
  e0:	0e 94 48 00 	call	0x90	; 0x90 <SPI_MasterInit>
  e4:	ce 01       	movw	r24, r28
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	0e 94 52 00 	call	0xa4	; 0xa4 <IMU_read_acc>
  ec:	8a 81       	ldd	r24, Y+2	; 0x02
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	98 2f       	mov	r25, r24
  f2:	88 27       	eor	r24, r24
  f4:	29 81       	ldd	r18, Y+1	; 0x01
  f6:	82 2b       	or	r24, r18
  f8:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <USART_Transmit_16_hex>
  fc:	8a e0       	ldi	r24, 0x0A	; 10
  fe:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 102:	8d e0       	ldi	r24, 0x0D	; 13
 104:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 108:	ed cf       	rjmp	.-38     	; 0xe4 <main+0x1c>

0000010a <USART_init>:
 10a:	90 93 c5 00 	sts	0x00C5, r25
 10e:	80 93 c4 00 	sts	0x00C4, r24
 112:	88 e9       	ldi	r24, 0x98	; 152
 114:	80 93 c1 00 	sts	0x00C1, r24
 118:	8e e0       	ldi	r24, 0x0E	; 14
 11a:	80 93 c2 00 	sts	0x00C2, r24
 11e:	08 95       	ret

00000120 <USART_Transmit>:
 120:	90 91 c0 00 	lds	r25, 0x00C0
 124:	95 ff       	sbrs	r25, 5
 126:	fc cf       	rjmp	.-8      	; 0x120 <USART_Transmit>
 128:	80 93 c6 00 	sts	0x00C6, r24
 12c:	08 95       	ret

0000012e <USART_Transmit_32_hex>:
 12e:	cf 92       	push	r12
 130:	df 92       	push	r13
 132:	ef 92       	push	r14
 134:	ff 92       	push	r15
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	28 97       	sbiw	r28, 0x08	; 8
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	fe 01       	movw	r30, r28
 150:	31 96       	adiw	r30, 0x01	; 1
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	8f 01       	movw	r16, r30
 158:	6b 01       	movw	r12, r22
 15a:	7c 01       	movw	r14, r24
 15c:	02 2e       	mov	r0, r18
 15e:	04 c0       	rjmp	.+8      	; 0x168 <USART_Transmit_32_hex+0x3a>
 160:	f5 94       	asr	r15
 162:	e7 94       	ror	r14
 164:	d7 94       	ror	r13
 166:	c7 94       	ror	r12
 168:	0a 94       	dec	r0
 16a:	d2 f7       	brpl	.-12     	; 0x160 <USART_Transmit_32_hex+0x32>
 16c:	4c 2d       	mov	r20, r12
 16e:	4f 70       	andi	r20, 0x0F	; 15
 170:	41 93       	st	Z+, r20
 172:	2c 5f       	subi	r18, 0xFC	; 252
 174:	3f 4f       	sbci	r19, 0xFF	; 255
 176:	20 32       	cpi	r18, 0x20	; 32
 178:	31 05       	cpc	r19, r1
 17a:	71 f7       	brne	.-36     	; 0x158 <USART_Transmit_32_hex+0x2a>
 17c:	f8 01       	movw	r30, r16
 17e:	ce 01       	movw	r24, r28
 180:	09 96       	adiw	r24, 0x09	; 9
 182:	20 81       	ld	r18, Z
 184:	2a 30       	cpi	r18, 0x0A	; 10
 186:	10 f4       	brcc	.+4      	; 0x18c <USART_Transmit_32_hex+0x5e>
 188:	20 5d       	subi	r18, 0xD0	; 208
 18a:	03 c0       	rjmp	.+6      	; 0x192 <USART_Transmit_32_hex+0x64>
 18c:	20 31       	cpi	r18, 0x10	; 16
 18e:	10 f4       	brcc	.+4      	; 0x194 <USART_Transmit_32_hex+0x66>
 190:	29 5c       	subi	r18, 0xC9	; 201
 192:	20 83       	st	Z, r18
 194:	31 96       	adiw	r30, 0x01	; 1
 196:	e8 17       	cp	r30, r24
 198:	f9 07       	cpc	r31, r25
 19a:	99 f7       	brne	.-26     	; 0x182 <USART_Transmit_32_hex+0x54>
 19c:	7f 01       	movw	r14, r30
 19e:	f7 01       	movw	r30, r14
 1a0:	82 91       	ld	r24, -Z
 1a2:	7f 01       	movw	r14, r30
 1a4:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 1a8:	e0 16       	cp	r14, r16
 1aa:	f1 06       	cpc	r15, r17
 1ac:	c1 f7       	brne	.-16     	; 0x19e <USART_Transmit_32_hex+0x70>
 1ae:	8a e0       	ldi	r24, 0x0A	; 10
 1b0:	28 96       	adiw	r28, 0x08	; 8
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	de bf       	out	0x3e, r29	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	cd bf       	out	0x3d, r28	; 61
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	ff 90       	pop	r15
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	0c 94 90 00 	jmp	0x120	; 0x120 <USART_Transmit>

000001d0 <USART_Transmit_16_hex>:
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	48 2f       	mov	r20, r24
 1da:	4f 70       	andi	r20, 0x0F	; 15
 1dc:	9c 01       	movw	r18, r24
 1de:	84 e0       	ldi	r24, 0x04	; 4
 1e0:	35 95       	asr	r19
 1e2:	27 95       	ror	r18
 1e4:	8a 95       	dec	r24
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <USART_Transmit_16_hex+0x10>
 1e8:	2f 70       	andi	r18, 0x0F	; 15
 1ea:	39 2f       	mov	r19, r25
 1ec:	3f 70       	andi	r19, 0x0F	; 15
 1ee:	92 95       	swap	r25
 1f0:	9f 70       	andi	r25, 0x0F	; 15
 1f2:	4a 30       	cpi	r20, 0x0A	; 10
 1f4:	10 f4       	brcc	.+4      	; 0x1fa <USART_Transmit_16_hex+0x2a>
 1f6:	00 e3       	ldi	r16, 0x30	; 48
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <USART_Transmit_16_hex+0x2c>
 1fa:	07 e3       	ldi	r16, 0x37	; 55
 1fc:	04 0f       	add	r16, r20
 1fe:	2a 30       	cpi	r18, 0x0A	; 10
 200:	10 f4       	brcc	.+4      	; 0x206 <USART_Transmit_16_hex+0x36>
 202:	10 e3       	ldi	r17, 0x30	; 48
 204:	01 c0       	rjmp	.+2      	; 0x208 <USART_Transmit_16_hex+0x38>
 206:	17 e3       	ldi	r17, 0x37	; 55
 208:	12 0f       	add	r17, r18
 20a:	3a 30       	cpi	r19, 0x0A	; 10
 20c:	10 f4       	brcc	.+4      	; 0x212 <USART_Transmit_16_hex+0x42>
 20e:	d0 e3       	ldi	r29, 0x30	; 48
 210:	01 c0       	rjmp	.+2      	; 0x214 <USART_Transmit_16_hex+0x44>
 212:	d7 e3       	ldi	r29, 0x37	; 55
 214:	d3 0f       	add	r29, r19
 216:	9a 30       	cpi	r25, 0x0A	; 10
 218:	10 f4       	brcc	.+4      	; 0x21e <USART_Transmit_16_hex+0x4e>
 21a:	c0 e3       	ldi	r28, 0x30	; 48
 21c:	01 c0       	rjmp	.+2      	; 0x220 <USART_Transmit_16_hex+0x50>
 21e:	c7 e3       	ldi	r28, 0x37	; 55
 220:	c9 0f       	add	r28, r25
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 228:	88 e7       	ldi	r24, 0x78	; 120
 22a:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 22e:	80 2f       	mov	r24, r16
 230:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 234:	81 2f       	mov	r24, r17
 236:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 23a:	8d 2f       	mov	r24, r29
 23c:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 240:	8c 2f       	mov	r24, r28
 242:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 246:	8a e0       	ldi	r24, 0x0A	; 10
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	0c 94 90 00 	jmp	0x120	; 0x120 <USART_Transmit>

00000254 <USART_Transmit_8_hex>:
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	98 2f       	mov	r25, r24
 25a:	9f 70       	andi	r25, 0x0F	; 15
 25c:	c8 2f       	mov	r28, r24
 25e:	c2 95       	swap	r28
 260:	cf 70       	andi	r28, 0x0F	; 15
 262:	9a 30       	cpi	r25, 0x0A	; 10
 264:	10 f4       	brcc	.+4      	; 0x26a <USART_Transmit_8_hex+0x16>
 266:	d0 e3       	ldi	r29, 0x30	; 48
 268:	01 c0       	rjmp	.+2      	; 0x26c <USART_Transmit_8_hex+0x18>
 26a:	d7 e3       	ldi	r29, 0x37	; 55
 26c:	d9 0f       	add	r29, r25
 26e:	ca 30       	cpi	r28, 0x0A	; 10
 270:	10 f4       	brcc	.+4      	; 0x276 <USART_Transmit_8_hex+0x22>
 272:	c0 5d       	subi	r28, 0xD0	; 208
 274:	03 c0       	rjmp	.+6      	; 0x27c <USART_Transmit_8_hex+0x28>
 276:	c0 31       	cpi	r28, 0x10	; 16
 278:	08 f4       	brcc	.+2      	; 0x27c <USART_Transmit_8_hex+0x28>
 27a:	c9 5c       	subi	r28, 0xC9	; 201
 27c:	80 e3       	ldi	r24, 0x30	; 48
 27e:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 282:	88 e7       	ldi	r24, 0x78	; 120
 284:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 288:	8c 2f       	mov	r24, r28
 28a:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 28e:	8d 2f       	mov	r24, r29
 290:	0e 94 90 00 	call	0x120	; 0x120 <USART_Transmit>
 294:	8a e0       	ldi	r24, 0x0A	; 10
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	0c 94 90 00 	jmp	0x120	; 0x120 <USART_Transmit>

0000029e <__vector_18>:
 29e:	1f 92       	push	r1
 2a0:	0f 92       	push	r0
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	0f 92       	push	r0
 2a6:	11 24       	eor	r1, r1
 2a8:	8f 93       	push	r24
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	80 93 00 01 	sts	0x0100, r24
 2b0:	80 91 c6 00 	lds	r24, 0x00C6
 2b4:	80 93 01 01 	sts	0x0101, r24
 2b8:	8f 91       	pop	r24
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <_exit>:
 2c4:	f8 94       	cli

000002c6 <__stop_program>:
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <__stop_program>
