
usart_advanced.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000272  00000306  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000272  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000306  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000306  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000318  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000017c  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000028  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000b6  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 24 01 	jmp	0x248	; 0x248 <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 37 01 	jmp	0x26e	; 0x26e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
  90:	78 94       	sei
  92:	87 e6       	ldi	r24, 0x67	; 103
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 5a 00 	call	0xb4	; 0xb4 <USART_init>
  9a:	80 91 00 01 	lds	r24, 0x0100
  9e:	88 23       	and	r24, r24
  a0:	e1 f3       	breq	.-8      	; 0x9a <main+0xa>
  a2:	60 e5       	ldi	r22, 0x50	; 80
  a4:	73 ec       	ldi	r23, 0xC3	; 195
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 6c 00 	call	0xd8	; 0xd8 <USART_Transmit_32_hex>
  ae:	10 92 00 01 	sts	0x0100, r1
  b2:	f3 cf       	rjmp	.-26     	; 0x9a <main+0xa>

000000b4 <USART_init>:
  b4:	90 93 c5 00 	sts	0x00C5, r25
  b8:	80 93 c4 00 	sts	0x00C4, r24
  bc:	88 e9       	ldi	r24, 0x98	; 152
  be:	80 93 c1 00 	sts	0x00C1, r24
  c2:	8e e0       	ldi	r24, 0x0E	; 14
  c4:	80 93 c2 00 	sts	0x00C2, r24
  c8:	08 95       	ret

000000ca <USART_Transmit>:
  ca:	90 91 c0 00 	lds	r25, 0x00C0
  ce:	95 ff       	sbrs	r25, 5
  d0:	fc cf       	rjmp	.-8      	; 0xca <USART_Transmit>
  d2:	80 93 c6 00 	sts	0x00C6, r24
  d6:	08 95       	ret

000000d8 <USART_Transmit_32_hex>:
  d8:	cf 92       	push	r12
  da:	df 92       	push	r13
  dc:	ef 92       	push	r14
  de:	ff 92       	push	r15
  e0:	0f 93       	push	r16
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	cd b7       	in	r28, 0x3d	; 61
  ea:	de b7       	in	r29, 0x3e	; 62
  ec:	28 97       	sbiw	r28, 0x08	; 8
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	f8 94       	cli
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	cd bf       	out	0x3d, r28	; 61
  f8:	fe 01       	movw	r30, r28
  fa:	31 96       	adiw	r30, 0x01	; 1
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	8f 01       	movw	r16, r30
 102:	6b 01       	movw	r12, r22
 104:	7c 01       	movw	r14, r24
 106:	02 2e       	mov	r0, r18
 108:	04 c0       	rjmp	.+8      	; 0x112 <USART_Transmit_32_hex+0x3a>
 10a:	f5 94       	asr	r15
 10c:	e7 94       	ror	r14
 10e:	d7 94       	ror	r13
 110:	c7 94       	ror	r12
 112:	0a 94       	dec	r0
 114:	d2 f7       	brpl	.-12     	; 0x10a <USART_Transmit_32_hex+0x32>
 116:	4c 2d       	mov	r20, r12
 118:	4f 70       	andi	r20, 0x0F	; 15
 11a:	41 93       	st	Z+, r20
 11c:	2c 5f       	subi	r18, 0xFC	; 252
 11e:	3f 4f       	sbci	r19, 0xFF	; 255
 120:	20 32       	cpi	r18, 0x20	; 32
 122:	31 05       	cpc	r19, r1
 124:	71 f7       	brne	.-36     	; 0x102 <USART_Transmit_32_hex+0x2a>
 126:	f8 01       	movw	r30, r16
 128:	ce 01       	movw	r24, r28
 12a:	09 96       	adiw	r24, 0x09	; 9
 12c:	20 81       	ld	r18, Z
 12e:	2a 30       	cpi	r18, 0x0A	; 10
 130:	10 f4       	brcc	.+4      	; 0x136 <USART_Transmit_32_hex+0x5e>
 132:	20 5d       	subi	r18, 0xD0	; 208
 134:	03 c0       	rjmp	.+6      	; 0x13c <USART_Transmit_32_hex+0x64>
 136:	20 31       	cpi	r18, 0x10	; 16
 138:	10 f4       	brcc	.+4      	; 0x13e <USART_Transmit_32_hex+0x66>
 13a:	29 5c       	subi	r18, 0xC9	; 201
 13c:	20 83       	st	Z, r18
 13e:	31 96       	adiw	r30, 0x01	; 1
 140:	e8 17       	cp	r30, r24
 142:	f9 07       	cpc	r31, r25
 144:	99 f7       	brne	.-26     	; 0x12c <USART_Transmit_32_hex+0x54>
 146:	7f 01       	movw	r14, r30
 148:	f7 01       	movw	r30, r14
 14a:	82 91       	ld	r24, -Z
 14c:	7f 01       	movw	r14, r30
 14e:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 152:	e0 16       	cp	r14, r16
 154:	f1 06       	cpc	r15, r17
 156:	c1 f7       	brne	.-16     	; 0x148 <USART_Transmit_32_hex+0x70>
 158:	8a e0       	ldi	r24, 0x0A	; 10
 15a:	28 96       	adiw	r28, 0x08	; 8
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	1f 91       	pop	r17
 16c:	0f 91       	pop	r16
 16e:	ff 90       	pop	r15
 170:	ef 90       	pop	r14
 172:	df 90       	pop	r13
 174:	cf 90       	pop	r12
 176:	0c 94 65 00 	jmp	0xca	; 0xca <USART_Transmit>

0000017a <USART_Transmit_16_hex>:
 17a:	0f 93       	push	r16
 17c:	1f 93       	push	r17
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	48 2f       	mov	r20, r24
 184:	4f 70       	andi	r20, 0x0F	; 15
 186:	9c 01       	movw	r18, r24
 188:	84 e0       	ldi	r24, 0x04	; 4
 18a:	35 95       	asr	r19
 18c:	27 95       	ror	r18
 18e:	8a 95       	dec	r24
 190:	e1 f7       	brne	.-8      	; 0x18a <USART_Transmit_16_hex+0x10>
 192:	2f 70       	andi	r18, 0x0F	; 15
 194:	39 2f       	mov	r19, r25
 196:	3f 70       	andi	r19, 0x0F	; 15
 198:	92 95       	swap	r25
 19a:	9f 70       	andi	r25, 0x0F	; 15
 19c:	4a 30       	cpi	r20, 0x0A	; 10
 19e:	10 f4       	brcc	.+4      	; 0x1a4 <USART_Transmit_16_hex+0x2a>
 1a0:	00 e3       	ldi	r16, 0x30	; 48
 1a2:	01 c0       	rjmp	.+2      	; 0x1a6 <USART_Transmit_16_hex+0x2c>
 1a4:	07 e3       	ldi	r16, 0x37	; 55
 1a6:	04 0f       	add	r16, r20
 1a8:	2a 30       	cpi	r18, 0x0A	; 10
 1aa:	10 f4       	brcc	.+4      	; 0x1b0 <USART_Transmit_16_hex+0x36>
 1ac:	10 e3       	ldi	r17, 0x30	; 48
 1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <USART_Transmit_16_hex+0x38>
 1b0:	17 e3       	ldi	r17, 0x37	; 55
 1b2:	12 0f       	add	r17, r18
 1b4:	3a 30       	cpi	r19, 0x0A	; 10
 1b6:	10 f4       	brcc	.+4      	; 0x1bc <USART_Transmit_16_hex+0x42>
 1b8:	d0 e3       	ldi	r29, 0x30	; 48
 1ba:	01 c0       	rjmp	.+2      	; 0x1be <USART_Transmit_16_hex+0x44>
 1bc:	d7 e3       	ldi	r29, 0x37	; 55
 1be:	d3 0f       	add	r29, r19
 1c0:	9a 30       	cpi	r25, 0x0A	; 10
 1c2:	10 f4       	brcc	.+4      	; 0x1c8 <USART_Transmit_16_hex+0x4e>
 1c4:	c0 e3       	ldi	r28, 0x30	; 48
 1c6:	01 c0       	rjmp	.+2      	; 0x1ca <USART_Transmit_16_hex+0x50>
 1c8:	c7 e3       	ldi	r28, 0x37	; 55
 1ca:	c9 0f       	add	r28, r25
 1cc:	80 e3       	ldi	r24, 0x30	; 48
 1ce:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1d2:	88 e7       	ldi	r24, 0x78	; 120
 1d4:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1d8:	80 2f       	mov	r24, r16
 1da:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1de:	81 2f       	mov	r24, r17
 1e0:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1e4:	8d 2f       	mov	r24, r29
 1e6:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1ea:	8c 2f       	mov	r24, r28
 1ec:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 1f0:	8a e0       	ldi	r24, 0x0A	; 10
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	1f 91       	pop	r17
 1f8:	0f 91       	pop	r16
 1fa:	0c 94 65 00 	jmp	0xca	; 0xca <USART_Transmit>

000001fe <USART_Transmit_8_hex>:
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	98 2f       	mov	r25, r24
 204:	9f 70       	andi	r25, 0x0F	; 15
 206:	c8 2f       	mov	r28, r24
 208:	c2 95       	swap	r28
 20a:	cf 70       	andi	r28, 0x0F	; 15
 20c:	9a 30       	cpi	r25, 0x0A	; 10
 20e:	10 f4       	brcc	.+4      	; 0x214 <USART_Transmit_8_hex+0x16>
 210:	d0 e3       	ldi	r29, 0x30	; 48
 212:	01 c0       	rjmp	.+2      	; 0x216 <USART_Transmit_8_hex+0x18>
 214:	d7 e3       	ldi	r29, 0x37	; 55
 216:	d9 0f       	add	r29, r25
 218:	ca 30       	cpi	r28, 0x0A	; 10
 21a:	10 f4       	brcc	.+4      	; 0x220 <USART_Transmit_8_hex+0x22>
 21c:	c0 5d       	subi	r28, 0xD0	; 208
 21e:	03 c0       	rjmp	.+6      	; 0x226 <USART_Transmit_8_hex+0x28>
 220:	c0 31       	cpi	r28, 0x10	; 16
 222:	08 f4       	brcc	.+2      	; 0x226 <USART_Transmit_8_hex+0x28>
 224:	c9 5c       	subi	r28, 0xC9	; 201
 226:	80 e3       	ldi	r24, 0x30	; 48
 228:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 22c:	88 e7       	ldi	r24, 0x78	; 120
 22e:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 232:	8c 2f       	mov	r24, r28
 234:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 238:	8d 2f       	mov	r24, r29
 23a:	0e 94 65 00 	call	0xca	; 0xca <USART_Transmit>
 23e:	8a e0       	ldi	r24, 0x0A	; 10
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	0c 94 65 00 	jmp	0xca	; 0xca <USART_Transmit>

00000248 <__vector_18>:
 248:	1f 92       	push	r1
 24a:	0f 92       	push	r0
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	0f 92       	push	r0
 250:	11 24       	eor	r1, r1
 252:	8f 93       	push	r24
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	80 93 00 01 	sts	0x0100, r24
 25a:	80 91 c6 00 	lds	r24, 0x00C6
 25e:	80 93 01 01 	sts	0x0101, r24
 262:	8f 91       	pop	r24
 264:	0f 90       	pop	r0
 266:	0f be       	out	0x3f, r0	; 63
 268:	0f 90       	pop	r0
 26a:	1f 90       	pop	r1
 26c:	18 95       	reti

0000026e <_exit>:
 26e:	f8 94       	cli

00000270 <__stop_program>:
 270:	ff cf       	rjmp	.-2      	; 0x270 <__stop_program>
