
uart_echo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000118  000001ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000118  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000001ac  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000017c  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000028  00000000  00000000  0000037c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000b6  00000000  00000000  000003a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  88:	0c 94 8a 00 	jmp	0x114	; 0x114 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <Led_init>:
  90:	24 9a       	sbi	0x04, 4	; 4
  92:	08 95       	ret

00000094 <Led_on>:
  94:	2c 9a       	sbi	0x05, 4	; 5
  96:	08 95       	ret

00000098 <Led_off>:
  98:	2c 98       	cbi	0x05, 4	; 5
  9a:	08 95       	ret

0000009c <Led_toggle>:
  9c:	85 b1       	in	r24, 0x05	; 5
  9e:	90 e1       	ldi	r25, 0x10	; 16
  a0:	89 27       	eor	r24, r25
  a2:	85 b9       	out	0x05, r24	; 5
  a4:	08 95       	ret

000000a6 <main>:
  a6:	87 e6       	ldi	r24, 0x67	; 103
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 65 00 	call	0xca	; 0xca <USART_init>
  ae:	78 94       	sei
  b0:	80 91 00 01 	lds	r24, 0x0100
  b4:	88 23       	and	r24, r24
  b6:	e1 f3       	breq	.-8      	; 0xb0 <main+0xa>
  b8:	80 91 01 01 	lds	r24, 0x0101
  bc:	0e 94 70 00 	call	0xe0	; 0xe0 <USART_Transmit>
  c0:	10 92 00 01 	sts	0x0100, r1
  c4:	10 92 01 01 	sts	0x0101, r1
  c8:	f3 cf       	rjmp	.-26     	; 0xb0 <main+0xa>

000000ca <USART_init>:
  ca:	90 93 c5 00 	sts	0x00C5, r25
  ce:	80 93 c4 00 	sts	0x00C4, r24
  d2:	88 e9       	ldi	r24, 0x98	; 152
  d4:	80 93 c1 00 	sts	0x00C1, r24
  d8:	8e e0       	ldi	r24, 0x0E	; 14
  da:	80 93 c2 00 	sts	0x00C2, r24
  de:	08 95       	ret

000000e0 <USART_Transmit>:
  e0:	90 91 c0 00 	lds	r25, 0x00C0
  e4:	95 ff       	sbrs	r25, 5
  e6:	fc cf       	rjmp	.-8      	; 0xe0 <USART_Transmit>
  e8:	80 93 c6 00 	sts	0x00C6, r24
  ec:	08 95       	ret

000000ee <__vector_18>:
  ee:	1f 92       	push	r1
  f0:	0f 92       	push	r0
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	0f 92       	push	r0
  f6:	11 24       	eor	r1, r1
  f8:	8f 93       	push	r24
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	80 93 00 01 	sts	0x0100, r24
 100:	80 91 c6 00 	lds	r24, 0x00C6
 104:	80 93 01 01 	sts	0x0101, r24
 108:	8f 91       	pop	r24
 10a:	0f 90       	pop	r0
 10c:	0f be       	out	0x3f, r0	; 63
 10e:	0f 90       	pop	r0
 110:	1f 90       	pop	r1
 112:	18 95       	reti

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
